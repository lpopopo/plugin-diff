operation:"+","accAdd",left:Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })),right:Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false })
start:3157249,end:3157276
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }),right:Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") }))
start:3157249,end:3157317
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 3157320..3157337, obj: Ident(Ident { span: 3157320..3157326, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157327..3157337, sym: "passNumber" }) })
start:3157249,end:3157337
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157320..3157337, obj: Ident(Ident { span: 3157320..3157326, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157327..3157337, sym: "passNumber" }) }) }], type_args: None }),right:Lit(Str(Str { span: 3157340..3157366, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") }))
start:3157249,end:3157366
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157320..3157337, obj: Ident(Ident { span: 3157320..3157326, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157327..3157337, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157340..3157366, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 3157369..3157389, obj: Ident(Ident { span: 3157369..3157375, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157376..3157389, sym: "successNumber" }) })
start:3157249,end:3157389
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157320..3157337, obj: Ident(Ident { span: 3157320..3157326, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157327..3157337, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157340..3157366, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157369..3157389, obj: Ident(Ident { span: 3157369..3157375, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157376..3157389, sym: "successNumber" }) }) }], type_args: None }),right:Lit(Str(Str { span: 3157392..3157418, value: "，撤回：", raw: Some("\"\\uFF0C\\u64A4\\u56DE\\uFF1A\"") }))
start:3157249,end:3157418
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157249..3157269, value: "总数：", raw: Some("\"\\u603B\\u6570\\uFF1A\"") })) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157272..3157276, ctxt: #5, sym: "text", optional: false }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157279..3157317, value: "，校验通过：", raw: Some("\"\\uFF0C\\u6821\\u9A8C\\u901A\\u8FC7\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157320..3157337, obj: Ident(Ident { span: 3157320..3157326, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157327..3157337, sym: "passNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157340..3157366, value: "，成功：", raw: Some("\"\\uFF0C\\u6210\\u529F\\uFF1A\"") })) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 3157369..3157389, obj: Ident(Ident { span: 3157369..3157375, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157376..3157389, sym: "successNumber" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157392..3157418, value: "，撤回：", raw: Some("\"\\uFF0C\\u64A4\\u56DE\\uFF1A\"") })) }], type_args: None }),right:Member(MemberExpr { span: 3157421..3157442, obj: Ident(Ident { span: 3157421..3157427, ctxt: #5, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157428..3157442, sym: "withdrawNumber" }) })
start:3157249,end:3157442
operation:"+","accAdd",left:Ident(Ident { span: 3157744..3157748, ctxt: #6, sym: "text", optional: false }),right:Lit(Str(Str { span: 3157751..3157754, value: "/", raw: Some("\"/\"") }))
start:3157744,end:3157754
operation:"+","accAdd",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Ident(Ident { span: 3157744..3157748, ctxt: #6, sym: "text", optional: false }) }, ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 3157751..3157754, value: "/", raw: Some("\"/\"") })) }], type_args: None }),right:Member(MemberExpr { span: 3157757..3157774, obj: Ident(Ident { span: 3157757..3157763, ctxt: #6, sym: "record", optional: false }), prop: Ident(IdentName { span: 3157764..3157774, sym: "operatorId" }) })
start:3157744,end:3157774