operation:"+","accAdd",left:Ident(Ident { span: 79886..79891, ctxt: #4, sym: "index", optional: false }),right:Lit(Num(Number { span: 79894..79895, value: 1.0, raw: Some("1") }))
start:79886,end:79895
operation:"+","accAdd",left:Ident(Ident { span: 91942..91947, ctxt: #35, sym: "index", optional: false }),right:Lit(Num(Number { span: 91950..91951, value: 1.0, raw: Some("1") }))
start:91942,end:91951
operation:"/","accDiv",left:Ident(Ident { span: 98638..98643, ctxt: #61, sym: "value", optional: false }),right:Lit(Num(Number { span: 98646..98649, value: 100.0, raw: Some("100") }))
start:98638,end:98649
operation:"*","accMul",left:Call(CallExpr { span: 99482..99499, ctxt: #0, callee: Expr(Ident(Ident { span: 99482..99492, ctxt: #1, sym: "parseFloat", optional: false })), args: [ExprOrSpread { spread: None, expr: Ident(Ident { span: 99493..99498, ctxt: #66, sym: "value", optional: false }) }], type_args: None }),right:Lit(Num(Number { span: 99502..99505, value: 100.0, raw: Some("100") }))
start:99482,end:99505
operation:"*","accMul",left:Call(CallExpr { span: 99523..99540, ctxt: #0, callee: Expr(Ident(Ident { span: 99523..99533, ctxt: #1, sym: "parseFloat", optional: false })), args: [ExprOrSpread { spread: None, expr: Ident(Ident { span: 99534..99539, ctxt: #66, sym: "value", optional: false }) }], type_args: None }),right:Lit(Num(Number { span: 99543..99546, value: 100.0, raw: Some("100") }))
start:99523,end:99546
operation:"/","accDiv",left:Member(MemberExpr { span: 100003..100038, obj: Ident(Ident { span: 100003..100015, ctxt: #66, sym: "$balanceList", optional: false }), prop: Ident(IdentName { span: 100016..100038, sym: "current_balance_amount" }) }),right:Member(MemberExpr { span: 100041..100072, obj: Ident(Ident { span: 100041..100053, ctxt: #66, sym: "$balanceList", optional: false }), prop: Ident(IdentName { span: 100054..100072, sym: "max_balance_amount" }) })
start:100003,end:100072
operation:"-","accSub",left:Member(MemberExpr { span: 100258..100283, obj: Ident(Ident { span: 100258..100264, ctxt: #66, sym: "record", optional: false }), prop: Ident(IdentName { span: 100265..100283, sym: "max_balance_amount" }) }),right:Member(MemberExpr { span: 100286..100315, obj: Ident(Ident { span: 100286..100292, ctxt: #66, sym: "record", optional: false }), prop: Ident(IdentName { span: 100293..100315, sym: "already_balance_amount" }) })
start:100258,end:100315
operation:"-","accSub",left:Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accSub", optional: false })), args: [ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 100258..100283, obj: Ident(Ident { span: 100258..100264, ctxt: #66, sym: "record", optional: false }), prop: Ident(IdentName { span: 100265..100283, sym: "max_balance_amount" }) }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 100286..100315, obj: Ident(Ident { span: 100286..100292, ctxt: #66, sym: "record", optional: false }), prop: Ident(IdentName { span: 100293..100315, sym: "already_balance_amount" }) }) }], type_args: None }),right:Member(MemberExpr { span: 100318..100353, obj: Ident(Ident { span: 100318..100330, ctxt: #66, sym: "$balanceList", optional: false }), prop: Ident(IdentName { span: 100331..100353, sym: "current_balance_amount" }) })
start:100258,end:100353
operation:"+","accAdd",left:Call(CallExpr { span: 100501..100572, ctxt: #0, callee: Expr(Ident(Ident { span: 100501..100511, ctxt: #1, sym: "parseFloat", optional: false })), args: [ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 100512..100571, obj: Member(MemberExpr { span: 100512..100544, obj: Member(MemberExpr { span: 100512..100539, obj: This(ThisExpr { span: 100512..100516 }), prop: Ident(IdentName { span: 100517..100539, sym: "balanceDetailListStore" }) }), prop: Ident(IdentName { span: 100540..100544, sym: "data" }) }), prop: Ident(IdentName { span: 100545..100571, sym: "sum_current_balance_amount" }) }) }], type_args: None }),right:Member(MemberExpr { span: 100575..100610, obj: Ident(Ident { span: 100575..100587, ctxt: #66, sym: "$balanceList", optional: false }), prop: Ident(IdentName { span: 100588..100610, sym: "current_balance_amount" }) })
start:100501,end:100610
operation:"-","accSub",left:Paren(ParenExpr { span: 100500..100611, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 100501..100572, ctxt: #0, callee: Expr(Ident(Ident { span: 100501..100511, ctxt: #1, sym: "parseFloat", optional: false })), args: [ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 100512..100571, obj: Member(MemberExpr { span: 100512..100544, obj: Member(MemberExpr { span: 100512..100539, obj: This(ThisExpr { span: 100512..100516 }), prop: Ident(IdentName { span: 100517..100539, sym: "balanceDetailListStore" }) }), prop: Ident(IdentName { span: 100540..100544, sym: "data" }) }), prop: Ident(IdentName { span: 100545..100571, sym: "sum_current_balance_amount" }) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Member(MemberExpr { span: 100575..100610, obj: Ident(Ident { span: 100575..100587, ctxt: #66, sym: "$balanceList", optional: false }), prop: Ident(IdentName { span: 100588..100610, sym: "current_balance_amount" }) }) }], type_args: None }) }),right:Member(MemberExpr { span: 100614..100636, obj: This(ThisExpr { span: 100614..100618 }), prop: Ident(IdentName { span: 100619..100636, sym: "lastBalanceAmount" }) })
start:100500,end:100636
operation:"+","accAdd",left:Call(CallExpr { span: 104710..104765, ctxt: #0, callee: Expr(Member(MemberExpr { span: 104710..104720, obj: Ident(Ident { span: 104710..104714, ctxt: #1, sym: "Math", optional: false }), prop: Ident(IdentName { span: 104715..104720, sym: "round" }) })), args: [ExprOrSpread { spread: None, expr: Bin(BinExpr { span: 104721..104764, op: "*", left: Member(MemberExpr { span: 104721..104758, obj: Member(MemberExpr { span: 104721..104731, obj: This(ThisExpr { span: 104721..104725 }), prop: Ident(IdentName { span: 104726..104731, sym: "state" }) }), prop: Ident(IdentName { span: 104732..104758, sym: "sum_current_balance_amount" }) }), right: Lit(Num(Number { span: 104761..104764, value: 100.0, raw: Some("100") })) }) }], type_args: None }),right:Ident(Ident { span: 104768..104771, ctxt: #94, sym: "pre", optional: false })
start:104710,end:104771
operation:"-","accSub",left:Paren(ParenExpr { span: 104709..104772, expr: Call(CallExpr { span: 0..0, ctxt: #0, callee: Expr(Ident(Ident { span: 0..0, ctxt: #0, sym: "accAdd", optional: false })), args: [ExprOrSpread { spread: None, expr: Call(CallExpr { span: 104710..104765, ctxt: #0, callee: Expr(Member(MemberExpr { span: 104710..104720, obj: Ident(Ident { span: 104710..104714, ctxt: #1, sym: "Math", optional: false }), prop: Ident(IdentName { span: 104715..104720, sym: "round" }) })), args: [ExprOrSpread { spread: None, expr: Bin(BinExpr { span: 104721..104764, op: "*", left: Member(MemberExpr { span: 104721..104758, obj: Member(MemberExpr { span: 104721..104731, obj: This(ThisExpr { span: 104721..104725 }), prop: Ident(IdentName { span: 104726..104731, sym: "state" }) }), prop: Ident(IdentName { span: 104732..104758, sym: "sum_current_balance_amount" }) }), right: Lit(Num(Number { span: 104761..104764, value: 100.0, raw: Some("100") })) }) }], type_args: None }) }, ExprOrSpread { spread: None, expr: Ident(Ident { span: 104768..104771, ctxt: #94, sym: "pre", optional: false }) }], type_args: None }) }),right:Ident(Ident { span: 104775..104778, ctxt: #94, sym: "old", optional: false })
start:104709,end:104778
operation:"-","accSub",left:Member(MemberExpr { span: 108762..108774, obj: Ident(Ident { span: 108762..108767, ctxt: #108, sym: "value", optional: false }), prop: Ident(IdentName { span: 108768..108774, sym: "length" }) }),right:Call(CallExpr { span: 108777..108795, ctxt: #0, callee: Expr(Member(MemberExpr { span: 108777..108790, obj: Ident(Ident { span: 108777..108782, ctxt: #108, sym: "value", optional: false }), prop: Ident(IdentName { span: 108783..108790, sym: "indexOf" }) })), args: [ExprOrSpread { spread: None, expr: Lit(Str(Str { span: 108791..108794, value: ".", raw: Some("'.'") })) }], type_args: None })
start:108762,end:108795